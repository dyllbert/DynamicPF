==117== Memcheck, a memory error detector
==117== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==117== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==117== Command: ./dynamicpf
==117== Parent PID: 7
==117== 
--117-- 
--117-- Valgrind options:
--117--    --track-origins=yes
--117--    --verbose
--117--    --log-file=valgrind-out.txt
--117-- Contents of /proc/version:
--117--   Linux version 4.4.0-19041-Microsoft (Microsoft@Microsoft.com) (gcc version 5.4.0 (GCC) ) #488-Microsoft Mon Sep 01 13:43:00 PST 2020
--117-- 
--117-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--117-- Page sizes: currently 4096, max supported 4096
--117-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--117-- Reading syms from /mnt/c/Users/frodo/Documents/BYU/Grad/Robotics Class/Project/DynamicPF/dynamicpf
--117-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.31.so
--117--   Considering /usr/lib/x86_64-linux-gnu/ld-2.31.so ..
--117--   .. CRC mismatch (computed 6cded93a wanted 1af57820)
--117--   Considering /lib/x86_64-linux-gnu/ld-2.31.so ..
--117--   .. CRC mismatch (computed 6cded93a wanted 1af57820)
--117--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.31.so ..
--117--   .. CRC is valid
--117-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--117--    object doesn't have a symbol table
--117--    object doesn't have a dynamic symbol table
--117-- Scheduler: using generic scheduler lock implementation.
--117-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==117== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-117-by-dylan-on-???
==117== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-117-by-dylan-on-???
==117== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-117-by-dylan-on-???
==117== 
==117== TO CONTROL THIS PROCESS USING vgdb (which you probably
==117== don't want to do, unless you know exactly what you're doing,
==117== or are doing some strange experiment):
==117==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=117 ...command...
==117== 
==117== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==117==   /path/to/gdb ./dynamicpf
==117== and then give GDB the following command
==117==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=117
==117== --pid is optional if only one valgrind process is running
==117== 
==117== error calling PR_SET_PTRACER, vgdb might block
--117-- REDIR: 0x4022d80 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9ce2 (???)
--117-- REDIR: 0x4022b50 (ld-linux-x86-64.so.2:index) redirected to 0x580c9cfc (???)
--117-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--117--    object doesn't have a symbol table
--117-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--117--    object doesn't have a symbol table
==117== WARNING: new redirection conflicts with existing -- ignoring it
--117--     old: 0x04022d80 (strlen              ) R-> (0000.0) 0x580c9ce2 ???
--117--     new: 0x04022d80 (strlen              ) R-> (2007.0) 0x0483f060 strlen
--117-- REDIR: 0x401f560 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ffd0 (strcmp)
--117-- REDIR: 0x40232e0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4843a20 (mempcpy)
--117-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28
--117--    object doesn't have a symbol table
--117-- Reading syms from /usr/lib/x86_64-linux-gnu/libm-2.31.so
--117--   Considering /usr/lib/x86_64-linux-gnu/libm-2.31.so ..
--117--   .. CRC mismatch (computed b88da5c9 wanted 1658d783)
--117--   Considering /lib/x86_64-linux-gnu/libm-2.31.so ..
--117--   .. CRC mismatch (computed b88da5c9 wanted 1658d783)
--117--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libm-2.31.so ..
--117--   .. CRC is valid
--117-- Reading syms from /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
--117--    object doesn't have a symbol table
--117-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.31.so
--117--   Considering /usr/lib/x86_64-linux-gnu/libc-2.31.so ..
--117--   .. CRC mismatch (computed cd1655d1 wanted 09373696)
--117--   Considering /lib/x86_64-linux-gnu/libc-2.31.so ..
--117--   .. CRC mismatch (computed cd1655d1 wanted 09373696)
--117--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so ..
--117--   .. CRC is valid
--117-- REDIR: 0x4c42600 (libc.so.6:memmove) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c41900 (libc.so.6:strncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c42930 (libc.so.6:strcasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c41220 (libc.so.6:strcat) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c41960 (libc.so.6:rindex) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c43dd0 (libc.so.6:rawmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c5ee60 (libc.so.6:wmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c5e9a0 (libc.so.6:wcscmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c42760 (libc.so.6:mempcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c42590 (libc.so.6:bcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c41890 (libc.so.6:strncmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c412d0 (libc.so.6:strcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c426c0 (libc.so.6:memset) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c5e960 (libc.so.6:wcschr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c417f0 (libc.so.6:strnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c413b0 (libc.so.6:strcspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c42980 (libc.so.6:strncasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c41350 (libc.so.6:strcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c42ad0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c600d0 (libc.so.6:wcsnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c5e9e0 (libc.so.6:wcscpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c419a0 (libc.so.6:strpbrk) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c41280 (libc.so.6:index) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c417b0 (libc.so.6:strlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c4ad20 (libc.so.6:memrchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c429d0 (libc.so.6:strcasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c42550 (libc.so.6:memchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c5eab0 (libc.so.6:wcslen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c41c60 (libc.so.6:strspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c428d0 (libc.so.6:stpncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c42870 (libc.so.6:stpcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c43e10 (libc.so.6:strchrnul) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4c42a20 (libc.so.6:strncasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--117-- REDIR: 0x4d2a490 (libc.so.6:__strrchr_avx2) redirected to 0x483ea10 (rindex)
--117-- REDIR: 0x4c3c260 (libc.so.6:malloc) redirected to 0x483b780 (malloc)
--117-- REDIR: 0x4d2a660 (libc.so.6:__strlen_avx2) redirected to 0x483ef40 (strlen)
--117-- REDIR: 0x4d26c50 (libc.so.6:__memcmp_avx2_movbe) redirected to 0x48421e0 (bcmp)
--117-- REDIR: 0x4d25b60 (libc.so.6:__strcmp_avx2) redirected to 0x483fed0 (strcmp)
--117-- REDIR: 0x48fec10 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x483bdf0 (operator new(unsigned long))
--117-- REDIR: 0x4d2d670 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x48429f0 (memmove)
--117-- REDIR: 0x4c42120 (libc.so.6:__GI_strstr) redirected to 0x4843ca0 (__strstr_sse2)
--117-- REDIR: 0x48fec70 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x483c510 (operator new[](unsigned long))
--117-- REDIR: 0x4d26790 (libc.so.6:__rawmemchr_avx2) redirected to 0x4843580 (rawmemchr)
--117-- REDIR: 0x48fce60 (libstdc++.so.6:operator delete(void*)) redirected to 0x483cf50 (operator delete(void*))
--117-- REDIR: 0x48fce90 (libstdc++.so.6:operator delete[](void*)) redirected to 0x483d6e0 (operator delete[](void*))
--117-- REDIR: 0x4c3c850 (libc.so.6:free) redirected to 0x483c9d0 (free)
--117-- REDIR: 0x4d2d650 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4843660 (mempcpy)
==117== Invalid read of size 8
==117==    at 0x10D7F6: std::vector<double, std::allocator<double> >::size() const (stl_vector.h:916)
==117==    by 0x1100B9: std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) (stl_vector.h:552)
==117==    by 0x11B37E: LaserZ::LaserZ(LaserZ const&) (LaserZ.h:8)
==117==    by 0x11E0B8: History::getNoisyMeasurement(unsigned int) (History.cpp:36)
==117==    by 0x121F5B: main (main.cpp:355)
==117==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==117== 
==117== 
==117== Process terminating with default action of signal 11 (SIGSEGV)
==117==  Access not within mapped region at address 0x8
==117==    at 0x10D7F6: std::vector<double, std::allocator<double> >::size() const (stl_vector.h:916)
==117==    by 0x1100B9: std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) (stl_vector.h:552)
==117==    by 0x11B37E: LaserZ::LaserZ(LaserZ const&) (LaserZ.h:8)
==117==    by 0x11E0B8: History::getNoisyMeasurement(unsigned int) (History.cpp:36)
==117==    by 0x121F5B: main (main.cpp:355)
==117==  If you believe this happened as a result of a stack
==117==  overflow in your program's main thread (unlikely but
==117==  possible), you can try to increase the size of the
==117==  main thread stack using the --main-stacksize= flag.
==117==  The main thread stack size used in this run was 8388608.
==117== 
==117== HEAP SUMMARY:
==117==     in use at exit: 10,219,992 bytes in 5,381 blocks
==117==   total heap usage: 70,708 allocs, 65,327 frees, 20,053,819 bytes allocated
==117== 
==117== Searching for pointers to 5,381 not-freed blocks
==117== Checked 10,326,944 bytes
==117== 
==117== LEAK SUMMARY:
==117==    definitely lost: 0 bytes in 0 blocks
==117==    indirectly lost: 0 bytes in 0 blocks
==117==      possibly lost: 0 bytes in 0 blocks
==117==    still reachable: 10,219,992 bytes in 5,381 blocks
==117==         suppressed: 0 bytes in 0 blocks
==117== Rerun with --leak-check=full to see details of leaked memory
==117== 
==117== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==117== 
==117== 1 errors in context 1 of 1:
==117== Invalid read of size 8
==117==    at 0x10D7F6: std::vector<double, std::allocator<double> >::size() const (stl_vector.h:916)
==117==    by 0x1100B9: std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) (stl_vector.h:552)
==117==    by 0x11B37E: LaserZ::LaserZ(LaserZ const&) (LaserZ.h:8)
==117==    by 0x11E0B8: History::getNoisyMeasurement(unsigned int) (History.cpp:36)
==117==    by 0x121F5B: main (main.cpp:355)
==117==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==117== 
==117== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
